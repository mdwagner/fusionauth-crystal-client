name: Crystal CI

on: [push, pull_request]

jobs:
  specs:
    name: Specs
    runs-on: ubuntu-latest

    container:
      image: crystallang/crystal:0.35.1-alpine

    services:
      postgres:
        image: postgres:12
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      fusionauth:
        image: fusionauth/fusionauth-app:latest
        ports:
          - "9011:9011"
        env:
          DATABASE_URL: jdbc:postgresql://postgres:5432/fusionauth
          DATABASE_ROOT_USER: postgres
          DATABASE_ROOT_PASSWORD: postgres
          DATABASE_USER: fusionauth
          DATABASE_PASSWORD: fusionauth
          FUSIONAUTH_MEMORY: 512M
          FUSIONAUTH_SEARCH_ENGINE_TYPE: database
          FUSIONAUTH_URL: http://fusionauth:9011
          FUSIONAUTH_APP_KICKSTART_FILE: /tmp/kickstart.json
          FUSIONAUTH_KICKSTART_API_KEY: 4737ea8520bd454caabb7cb3d36e14bc1832c0d3f70a4189b82598670f11b1bd
        volumes:
          - ${{ github.workspace }}/spec/kickstart.json:/tmp/kickstart.json

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: shards install

    - name: Run specs
      run: crystal spec
      env:
        FUSIONAUTH_URL: http://fusionauth:9011
        FUSIONAUTH_API_KEY: 4737ea8520bd454caabb7cb3d36e14bc1832c0d3f70a4189b82598670f11b1bd

    - name: Dump docker logs on failure
      uses: jwalton/gh-docker-logs@v1
      if: failure()
